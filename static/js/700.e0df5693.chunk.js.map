{"version":3,"file":"static/js/700.e0df5693.chunk.js","mappings":"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","sources":["components/Common/TitleStyled.styled.jsx","components/Common/Title.jsx","components/ContactList/DeleteButton.styled.jsx","components/ContactList/DeleteButton.jsx","components/ContactList/ListItem.jsx","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","components/Filter/Filter.jsx","components/pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const TitleStyled = styled.h1`\n    margin-top: 50px;\n    font-size: 40px;\n    font-family: font-family: Georgia, \"Times New Roman\", Times, serif;\n    font-weight: 700;\n    text-align: center;\n`","import { TitleStyled } from \"./TitleStyled.styled\";\nimport PropTypes from 'prop-types';\n\nexport const Title = ({ title }) => {\n    return <>\n        <TitleStyled>{title}</TitleStyled>\n    </>\n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n}","import styled from \"@emotion/styled\"\n\nexport const DeleteBtn = styled.button`\n\tpadding: 5px 12px 5px 12px;\n\tcolor: #FFF;\n\tmargin-left: 10px;\n\tbackground: #1abc9c;\n\tfont-size: 16px;\n\ttext-align: center;\n\tfont-style: normal;\n\twidth: 100px;\n\tborder: 1px solid #16a085;\n\tborder-radius: 6px;\n\tborder-width: 1px 1px 3px;\n`","import { DeleteBtn } from './DeleteButton.styled';\nimport { getIsLoading } from 'redux/Auth/selectors'; \nimport { deleteContact } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const DeleteButton = ({ contactId }) => {\n    const isLoading = useSelector(getIsLoading);\n    const dispatch = useDispatch();\n    const handleDeleteContact = contactId => {\n        dispatch(deleteContact(contactId));\n    }\n\n    return <>\n        <DeleteBtn onClick={() => handleDeleteContact(contactId)}\n            type=\"button\"\n            value={contactId}\n            disabled={isLoading}\n        >\n            Delete\n        </DeleteBtn>\n    </>\n}\n\nDeleteButton.propTypes = {\n    contactId: PropTypes.string.isRequired,\n}","import { ListItem } from \"./ContactList.styled\"\nimport { DeleteButton } from \"./DeleteButton\";\nimport PropTypes from 'prop-types';\n\nconst ContactListItem = ({ contact }) => {\n    const { name, number, id } = contact;\n    \n    return <ListItem>{name}: {number}\n        <DeleteButton contactId={id}></DeleteButton>\n            </ListItem>\n\n}\n\nContactListItem.propTypes = {\n    contact: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactListItem;","import { Container, ContactsList } from \"./ContactList.styled\";\nimport { getFilteredContacts } from \"redux/Auth/selectors\";\nimport { useSelector } from \"react-redux\";\nimport ContactListItem from \"./ListItem\";\n\nconst ContactList = () => {\n    const contacts = useSelector(getFilteredContacts);\n    return (\n        contacts.length !== 0 &&\n        (\n        <Container>\n            <ContactsList>\n                {contacts.map((contact => (\n                   <ContactListItem key={ contact.id } contact={contact} />\n                )))}\n            </ContactsList>\n        </Container>))\n}\n\nexport default ContactList;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { addContact } from \"redux/operations\";\nimport { getContacts } from \"redux/Auth/selectors\";\nimport { useState } from 'react';\nimport { FormStyle, Label, Input, SubmitBtn } from './Phonebook.styled';\n\nexport const PhonebookForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = ({ target }) => {\n    setName(target.value);\n  }\n  \n  const handleNumberChange = ({ target }) => {\n    setNumber(target.value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const findContact = name => {\n      const toFind = name.toLowerCase();\n      if (contacts.find(({ name }) => name.toLowerCase() === toFind)) {\n        return true\n      } else {\n        return false;\n      }\n    };\n    if (!findContact(name)) {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n  return (\n    <FormStyle\n      onSubmit={handleSubmit}\n      >\n          <div>\n            <Label>Name</Label>\n            <Input onChange={handleNameChange}\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              pattern=\"^[a-zA-Za-яА-Я]+(([' -][a-zA-Za-яА-Я ])?[a-zA-Za-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <Label>Number</Label>\n            <Input onChange={handleNumberChange}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <SubmitBtn type=\"submit\"\n            >Add contact</SubmitBtn>\n          </div>\n      </FormStyle>\n    )\n  }\n","import { Input, Label } from \"components/Phonebook/Phonebook.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { setFilter } from \"redux/PhonebookSlice\";\nimport { getFilter } from \"redux/Auth/selectors\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n    const handleChange = ({ target }) => {\n        dispatch(setFilter(target.value));\n    }\n    return <>\n        <Label>Find contacts by name</Label>\n        <Input onChange={handleChange} type=\"search\"\n            name=\"filter\" value={filter}\n        ></Input>\n    </>\n}\n","import { Title } from \"components/Common/Title\";\nimport ContactList from \"components/ContactList/ContactList\";\nimport { PhonebookForm } from \"../../Phonebook/Phonebook\";\nimport { Filter } from \"../../Filter/Filter\";\nimport { Container } from \"../../ContactList/ContactList.styled\";\n\nconst Contacts = () => {\n    \n    return (\n        <Container>\n            <Title title=\"Phonebook\" />\n            <PhonebookForm />\n            <Title title=\"Contacts\" />\n            <Filter />\n            {/* {isLoading && <p>Loading...</p>}\n            {error && <p>Error - {error}</p>} */}\n            <ContactList/>\n        </Container>\n    )\n}\n\nexport default Contacts"],"names":["TitleStyled","styled","Title","title","DeleteBtn","DeleteButton","contactId","isLoading","useSelector","getIsLoading","dispatch","useDispatch","onClick","deleteContact","handleDeleteContact","type","value","disabled","contact","name","number","id","contacts","getFilteredContacts","length","map","PhonebookForm","getContacts","useState","setName","setNumber","onSubmit","e","preventDefault","toFind","toLowerCase","find","findContact","addContact","alert","onChange","target","pattern","required","Filter","filter","getFilter","setFilter"],"sourceRoot":""}